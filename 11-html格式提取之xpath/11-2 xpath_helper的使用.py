"""
1.确认数据类型 json html
2.确认是有数据的，并且是html格式
    --一个数据包只有25部电影   翻页  10页数据
3.怎么解析html中的数据，，文本内容
    --1.找到了response之后，点击一下response页面，按下搜索框ctrl + f
    --2.输入想要的数据，比方说'肖申克的救赎'
    --3.得到两个结果
        --(1)是在img(图片)节点里面，是一个属性值
        --(2)第二个是文本
    --4.确认了是span标签中的文本，为了唯一性，使用xpath_helper工具进行调试
        --(1) //span,结果有284个
        --(2) 添加过滤条件 利用 class="title" 这个属性  做一次过滤操作
              //span[@class="title"]   结果为49个
        --(3) 取文本信息(数据) //span[@class="title"]/text()
        --(4) 结合之前的分析，应该是25个数据
        --(5) 如果相同的span标签名称，同样的class属性值为title,一个在a标签里面，一个在a标签外面
              类似的情况可以往上取节点 //a/span[@class="title"]/text()  那么a标签之外的就取不到了
        --(6) 既然是同级标签，不能够靠向上取节点来过滤，那么就可以使用下标(索引)来取
              往上取a标签，a标签里面有两个span标签，我们要的是第一个，因此，可以用索引取
              //a/span[@class="title"][1]/text()
              跨节点取到a节点，往下取span节点中满足属性class="title"的第一个节点，然后取它的文本值

"""


"""
注意点：
由于html节点嵌套比json复杂的多的多
所以基本没有从根节点开始的情况，都是直接跨节点取
属性前就要加@
没有固定的xpath语法，只要结果正确相同即可
"""




"""
提取属性
比方说电影的详情页，图片的url

1.确认要的a标签中的href属性的值
2.//a 结构为153个
3.过滤操作
    --(1)a标签是否有属性，添加唯一属性 //a[@href="https://movie.douban.com/subject/1292052/"]/@href
        结果只有1部电影，肯定是不行的 
    --(2)取其它的属性 //a[@class=""]/@href 结果为95 
    --(3)往上找父节点，进行过滤  结果为 62  //div/a[@class=""]/@href
    --(4)父节点是否有属性，也可以进行过滤
          //div[@class="hd"]/a[@class=""]/@href  结果为25个
"""


"""
文本提取 xpath  电影名称   //a/span[@class="title"][1]/text()
属性提取 xpath  详情页url  //div[@class="hd"]/a[@class=""]/@href 
"""